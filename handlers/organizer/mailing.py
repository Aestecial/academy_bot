from aiogram import Bot, F, Router  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∏–∑ aiogram
from aiogram.fsm.context import FSMContext  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º FSMContext –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
from aiogram.types import CallbackQuery, Message  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∏–ø—ã
from database.users import (
    get_user_mailing, get_all_user_mailing, get_user_mailing_without_level
)  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
from keyboards.mailing_kb import mailing_kb, redact_kb, delegate_level  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from states.mailing import MailingState  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Ä–∞—Å—Å—ã–ª–∫–∏
from keyboards.profile_kb import main_back  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–æ—É—Ç–µ—Ä–∞
router = Router()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
@router.callback_query(F.data == "create_mailing")
async def handle_mailing(callback_query: CallbackQuery, state: FSMContext):
    await callback_query.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
    await state.set_state(MailingState.waiting_for_message)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
@router.message(MailingState.waiting_for_message)
async def mailing_choose(message: Message, state: FSMContext):
    await state.update_data(text=message.text)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await message.answer("–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.", reply_markup=mailing_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –¥–µ–ª–µ–≥–∞—Ç–æ–≤
@router.callback_query(F.data == 'mailing_–î–µ–ª–µ–≥–∞—Ç')
async def mailing_level(call: CallbackQuery, state: FSMContext):
    await state.update_data(role="–î–µ–ª–µ–≥–∞—Ç")
    await call.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–µ–ª–µ–≥–∞—Ç–∞:", reply_markup=delegate_level())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–µ–ª–µ–≥–∞—Ç–æ–≤
@router.callback_query(F.data.startswith("delegate/"))
async def mailing_choose(call: CallbackQuery, state: FSMContext):
    level = call.data.split("/")[-1]
    await state.update_data(level=level)
    user_data = await state.get_data()

    text = f"–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞:\n\nüîî <b>–†–ê–°–°–´–õ–ö–ê</b> üîî\n{user_data['text']}"
    text += f"\n\n–†–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:\n–†–æ–ª—å: {user_data['role']}\n–£—Ä–æ–≤–µ–Ω—å: {user_data['level']}"

    await call.message.edit_text(text, reply_markup=redact_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
@router.callback_query(F.data.startswith('mailing_'))
async def mailing_role(call: CallbackQuery, state: FSMContext):
    role = call.data.split("_")[-1]
    await state.update_data(role=role)
    await state.update_data(level="–í—Å–µ")
    user_data = await state.get_data()
    text = f"–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞:\n\nüîî <b>–†–ê–°–°–´–õ–ö–ê</b> üîî\n{user_data['text']}"
    text += f"\n\n–†–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:\n–†–æ–ª—å: {user_data['role']}"

    await call.message.edit_text(text, reply_markup=redact_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
@router.callback_query(F.data == 'start_mailing')
async def start_mailing(call: CallbackQuery, state: FSMContext, bot: Bot):
    user_data = await state.get_data()
    if user_data['role'] == '–í—Å–µ':
        users = await get_all_user_mailing()
    elif user_data['role'] == '–î–µ–ª–µ–≥–∞—Ç' and user_data['level'] != "–í—Å–µ–º":
        users = await get_user_mailing(user_data['role'], int(user_data['level']))
    else:
        users = await get_user_mailing_without_level(user_data['role'])

    for user in users:
        text = f"üîî <b>–†–ê–°–°–´–õ–ö–ê</b> üîî\n{user_data['text']}"
        await bot.send_message(chat_id=int(user[0]), text=text)

    await call.message.edit_text("–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.", reply_markup=main_back())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
@router.callback_query(F.data == 'redact_mailing')
async def redact_mailing(call: CallbackQuery):
    await call.message.edit_text("–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.", reply_markup=mailing_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–∞—Å—Å—ã–ª–∫–∏
@router.callback_query(F.data == 'cancel_mailing')
async def cancel_mailing(call: CallbackQuery, state: FSMContext):
    await state.clear()
    await call.message.edit_text("–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_back())
